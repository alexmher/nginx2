    upstream jirasdcluster {
    zone jirasdcluster 64k;
    least_conn;

    server oc2-inf-jsd-w01:8080;   # active node
    #server oc2-inf-jsd-w02:8080;   # passive node

    # Sticky session configuration using a cookie
    sticky cookie route_cookie expires=2h domain=jirasd.digitain.com path=/;
}

server {
    listen 80;
    server_name jirasd.digitain.com;
    access_log off;
    return 301 https://$host$request_uri;
}

server {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    status_zone jirasdcluster;
    listen 443 ssl;
    server_name jirasd.digitain.com;

    access_log /var/log/nginx/jirasd-access.log;
    error_log /var/log/nginx/jirasd-error.log;

    ssl_certificate /etc/nginx/ssl/jira.pem;
    ssl_certificate_key /etc/nginx/ssl/jira.key;
    client_max_body_size 50m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;

    location / {
        #limit_conn addr 10;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://jirasdcluster;
        health_check interval=1 fails=2 passes=3 uri=/status match=running;
    }
}

# Define cookie and URI-based route variables
map $cookie_jsessionid $route_cookie {
    ~.+\.(?P<route>\w+)$ $route;
}

map $request_uri $route_uri {
    ~jsessionid=.+\.(?P<route>\w+)$ $route;
}
